buildscript {

	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.gomezrondon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.11


repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext['springCloudVersion'] = 'Greenwich.SR1' // Ok Ok funcionan los 2 metodos
//ext['springCloudVersion'] = 'Greenwich.RC1' // da error, NO functiona lambda

dependencies {
	implementation('org.springframework.kafka:spring-kafka')
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
	implementation 'org.springframework.cloud:spring-cloud-stream-reactive'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
	testImplementation('org.springframework.kafka:spring-kafka-test')

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


task unzip(type: Copy) {

	dependsOn build
	
	def zipPath = "${buildDir}/libs/reactive-sink-${version}.jar"
	println zipPath
	def zipFile = file(zipPath)
	def outputDir = file("${buildDir}/libs")

	from zipTree(zipFile)
	into outputDir
}