buildscript {
	ext.kotlin_version = '1.3.30'
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.gomezrondon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.11

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext['springCloudVersion'] = 'Greenwich.SR1'

dependencies {
//https://docs.spring.io/spring-cloud-gcp/docs/1.0.0.BUILD-SNAPSHOT/reference/html/_spring_cloud_stream.html
	compile("org.springframework.cloud:spring-cloud-gcp-starter-pubsub")
	implementation('org.springframework.cloud:spring-cloud-gcp-pubsub-stream-binder')

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation('org.springframework.cloud:spring-cloud-stream')
	implementation 'org.springframework.cloud:spring-cloud-stream-reactive'

	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.4'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.4'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

task unzip(type: Copy) {

	dependsOn build

	def zipPath = "${buildDir}/libs/reactive-source-${version}.jar"
	println zipPath
	def zipFile = file(zipPath)
	def outputDir = file("${buildDir}/libs")

	from zipTree(zipFile)
	into outputDir
}